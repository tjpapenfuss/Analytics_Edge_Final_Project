setwd("~/AnalyticsEdge/AnalyticsEdge/HW_4")
library(caret)
library(rpart)
library(rpart.plot)
library(caTools)
library(dplyr)
library(randomForest)
library(gdata)
library(ggplot2)
ebay.df <- read.xls("eBayAuctions.xls")
table(ebay.df$Competitive.)
ebay.df$category.factor <- as.factor(ebay.df$Category)
ebay.df$currency.factor <- as.factor(ebay.df$currency)
ebay.df$endDay.factor <- as.factor(ebay.df$endDay)
ebay.df$duration.factor <- as.factor(ebay.df$Duration)
ebay.df$competitive.factor <- as.factor(ebay.df$Competitive.)
str(ebay.train)
set.seed(15071)
split = createDataPartition(ebay.df$category.factor, p = 0.6, list = FALSE)
ebay.train = ebay.df[split,]
ebay.test = ebay.df[-split,]
head(ebay.train)
# str(ebay.train)
# Testing to make sure I have an appropriate distro.
ggplot(aes(x=category.factor, y = ..count..), data = ebay.train) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("~/Analytics_Edge_Final_Project")
beer.df <- read.csv("beer_reviews_truncated.csv")
summary(beer.df)
str(beer.df)
#table(ebay.df$Competitive.)
beer.df$beer_style.factor = as.factor(beer.df$beer_style)
str(beer.df)
summary(beer.df)
View(beer.df)
set.seed(123)
set.seed(123)
split = createDataPartition(beer.df$beer_style.factor, p = 0.7, list = FALSE)
ebay.train = beer.df[split,]
ebay.test = beer.df[-split,]
beer.train = beer.df[split,]
beer.test = beer.df[-split,]
head(beer.train)
split = createDataPartition(beer.df$beer_style.factor, beer.df$brewery_id, p = 0.7, list = FALSE)
split = createDataPartition(beer.df$beer_style.factor, p = 0.7, list = FALSE)
beer.train = beer.df[split,]
beer.test = beer.df[-split,]
head(beer.train)
# str(ebay.train)
# Testing to make sure I have an appropriate distro.
ggplot(aes(x=beer_style.factor, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
table(beer_style.factor, ..count..)
table(beer.df$beer_style.factor, ..count..)
count(beer.df$beer_style.factor)
count(beer.df$beer_style)
library(dplyr)
count(beer.df$beer_style)
count(beer.df)
counting = beef.df %>% count(beer_style)
counting = beer.df %>% count(beer_style)
counting
counting = beer.df %>% count(beer_style, sort = TRUE)
counting
head(beer.train)
ggplot(aes(x=brewery_name, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
brewery_count = beer.df %>% count(brewery_naem, sort = TRUE)
brewery_count = beer.df %>% count(brewery_name, sort = TRUE)
brewery_count #This gives the count of the beer styles
beer.df = na.omit(beer.df)
beer.df$beer_style.factor = as.factor(beer.df$beer_style)
summary(beer.df)
str(beer.df)
#A question we need to ask. Do we want to split the data on the beer styles?
#Or do we split data based on the brewery? How do we want to present the data?
set.seed(123)
split = createDataPartition(beer.df$beer_style.factor, p = 0.7, list = FALSE)
beer.train = beer.df[split,]
beer.test = beer.df[-split,]
head(beer.train)
# str(ebay.train)
# Plotting the beer style counts.
ggplot(aes(x=beer_style.factor, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
style_count = beer.df %>% count(beer_style, sort = TRUE)
style_count #This gives the count of the beer styles
ggplot(aes(x=brewery_name, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
brewery_count = beer.df %>% count(brewery_name, sort = TRUE)
brewery_count #This gives the count of the beer styles
gwd
setwd("~/Analytics_Edge_Final_Project")
# The below code reads in all beers.
# You must put this csv file in your own directory.
# DO NOT PUT THE CSV IN THE GITHUB FOLDER. You will not be able to upload it.
beer.df = read.csv("~/AE-FinalProj-data/beers_table.csv")
count(beer.df)
# The below code will remove the NaNs.
beer.df = na.omit(beer.df)
count(beer.df)
# The below code will remove the NaNs.
beer.df = na.omit(beer.df)
beer.df$beer_style.factor = as.factor(beer.df$beer_style)
summary(beer.df)
str(beer.df)
#A question we need to ask. Do we want to split the data on the beer styles?
#Or do we split data based on the brewery? How do we want to present the data?
set.seed(123)
split = createDataPartition(beer.df$beer_style.factor, p = 0.7, list = FALSE)
beer.train = beer.df[split,]
beer.test = beer.df[-split,]
head(beer.train)
# str(ebay.train)
# Plotting the beer style counts.
ggplot(aes(x=beer_style.factor, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
style_count = beer.df %>% count(beer_style, sort = TRUE)
style_count #This gives the count of the beer styles
ggplot(aes(x=brewery_name, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(beer.df)
gc()
# The below code reads in all beers.
# You must put this csv file in your own directory.
# DO NOT PUT THE CSV IN THE GITHUB FOLDER. You will not be able to upload it.
beer.df = read.csv("~/AE-FinalProj-data/beer_reviews.csv")
count(beer.df)
# The below code will remove the NaNs.
beer.df = na.omit(beer.df)
count(beer.df)
beer.df$beer_style.factor = as.factor(beer.df$beer_style)
summary(beer.df)
str(beer.df)
#A question we need to ask. Do we want to split the data on the beer styles?
#Or do we split data based on the brewery? How do we want to present the data?
set.seed(123)
split = createDataPartition(beer.df$beer_style.factor, p = 0.7, list = FALSE)
beer.train = beer.df[split,]
beer.test = beer.df[-split,]
head(beer.train)
# str(ebay.train)
# Plotting the beer style counts.
ggplot(aes(x=beer_style.factor, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(aes(x=brewery_name, y = ..count..), data = beer.df) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
brewery_count = beer.df %>% count(brewery_name, sort = TRUE)
brewery_count #This gives the count of the beer styles
View(beer.df)
ggplot(beer.train, aes(x = brewery_name, y = review_overall)) + geom_point() +
geom_count(method = "lm", se = FALSE) +
ggtitle("Age vs. Readmission") + xlab("Age") + ylab("Readmission")
regressor = lm(review_overall ~ ., data = beer.train)
beer.apa = beer.df[beer_style = "American Pale Ale (APA)"]
beer.apa = beer.train %>% filter(beer_style = "American pale Ale (APA)")
beer.apa = beer.train %>% filter(beer_style == "American pale Ale (APA)")
beer.apa
summary(beer.apa)
head(beer.apa)
filter(beer.train, beer_style == "American pale Ale (APA)")
style_count = beer.df %>% count(beer_style, sort = TRUE)
style_count #This gives the count of the beer styles
filter(beer.train, beer_style == "American Strong Ale")
style_count #This gives the count of the beer styles
filter(beer.train, beer_style == "American IPA")
beer.ipa = beer.train %>% filter(beer_style == "American IPA")
head(beer.apa)
summary(beer.apa)
#Filter beer by American IPA
beer.ipa = filter(beer.train, beer_style == "American IPA")
summary(beer.apa)
head(beer.apa)
filter(beer.train, beer_style == "American IPA")
View(beer.ipa)
#Filter beer by American IPA. This gets rid of all beers except American IPA.
beer.ipa = filter(beer.train, beer_style == "American IPA")
head(beer.apa)
# Warning this pot is very convoluted.
ggplot(aes(x=brewery_name, y = ..count..), data = beer.ipa) +
geom_bar(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
brewery_count = beer.ipa %>% count(brewery_name, sort = TRUE)
brewery_count #This gives the count of the beer styles
ggplot(beer.ipa, aes(x = brewery_name, y = review_overall)) + geom_point() +
ggtitle("Age vs. Readmission") + xlab("Age") + ylab("Readmission")
regressor = lm(review_overall ~ ., data = beer.train)
regressor = lm(review_overall ~ ., data = beer.ipa)
regres = lm(review_overall ~ ., data = beer.ipa)
regressor = lm(review_overall ~ brewery_name, data = beer.ipa)
